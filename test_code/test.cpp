#include "core.h"
Core core;

int main() {
    core.init();
    core.addLine(Point(0, 0), Point(20, 20), 'L');
    core.addLine(Point(0, 20), Point(20, 0), 'S');
    core.addLine(Point(10, 20), Point(-10, 30), 'S');
    core.addLine(Point(-10, 0), Point(20, 30), 'R');
    core.addLine(Point(-10, 0), Point(-20, 40), 'R');
    core.addLine(Point(-20, 0), Point(0, -10), 'R');
    core.addCircle(Point(0, 0), 40);
    core.addCircle(Point(30, 0), 10);
    core.addCircle(Point(0, 0), 20);
    core.addCircle(Point(100, 100), 30);
    core.addLine(Point(0, 0), Point(0, 1), 'L');
    core.getLines();
    core.addLine(Point(0, 10), Point(1, 10), 'S');
    core.addCircle(Point(-1, 0), 1);
    core.getCircles();
    core.bruteForce();
    core.sweepLine();
    core.init();
    core.addLine(Point(0, 0), Point(2, 2), 'L');
    core.addLine(Point(0, 2), Point(2, 0), 'S');
    core.addLine(Point(1, 2), Point(-1, 3), 'S');
    core.addLine(Point(-1, 0), Point(2, 3), 'R');
    core.addLine(Point(-1, 0), Point(-2, 4), 'R');
    core.addLine(Point(-2, 0), Point(0, -1), 'R');
    core.bruteForce();
    core.sweepLine();
    core.needBruteForce();
    core.init();
    core.addCircle(Point(0, 0), 10);
    core.addCircle(Point(0, 0), 1);
    core.addCircle(Point(5, 0), 1);
    core.addCircle(Point(1, 0), 10);
    core.addCircle(Point(2, 0), 1);
    core.addCircle(Point(4, 0), 1);
    core.addCircle(Point(0, 0), 3);
    core.bruteForce();
    core.init();
    core.addCircle(Point(0, 0), -1);
    core.addCircle(Point(999999, 999999), 1);
    core.addCircle(Point(1.1, 0), 1);
    core.addCircle(Point(0, 1.1), 1);
    core.addCircle(Point(0, 0), 5);
    core.addCircle(Point(0, 0), 5);
    core.addCircle(Point(0, 0), 0.1);
    core.delCircle(Point(0, 0), 5);
    core.delCircle(Point(0, 0), 10);
    core.init();
    core.addLine(Point(0, 0), Point(3, 6), 'A');
    core.addLine(Point(0, 0), Point(0, 0), 'L');
    core.addLine(Point(1e6, 0), Point(0, 0), 'L');
    core.addLine(Point(0, -1e6), Point(0, 0), 'L');
    core.addLine(Point(0, 0), Point(1e6, 0), 'L');
    core.addLine(Point(0, 0), Point(0, -1e6), 'L');
    core.addLine(Point(0, 0), Point(3.3, 0), 'L');
    core.addLine(Point(1.1, 0), Point(0, 0), 'L');
    core.addLine(Point(0, 2.2), Point(0, 0), 'L');
    core.addLine(Point(0, 0), Point(0, 4.4), 'L');
    core.addLine(Point(0, 0), Point(1, 1), 'L');
    core.addLine(Point(0, 0), Point(-1, -1), 'L');
    core.init();
    core.addLine(Point(0, 0), Point(1, 1), 'S');
    core.addLine(Point(0, 0), Point(-1, -1), 'S');
    core.addLine(Point(1, 1), Point(-1, -1), 'R');
    core.init();
    core.addLine(Point(0, 0), Point(2, 2), 'R');
    core.addLine(Point(0, 1), Point(3, 4), 'R');
    core.addLine(Point(-1, -1), Point(1, 1), 'R');
    core.addLine(Point(0, 0), Point(-1, -1), 'R');
    core.addLine(Point(0, 0), Point(10, 10), 'L');
    core.delLine(Point(0, 0), Point(1, 1), 'R');
    core.delLine(Point(-1, -1), Point(1, 2), 'R');
    return 0;
}